import numpy as np

from src.components import Document
from src.demo_mdcu import MDCU
from typing import List
import os
import argparse
#Search Results
SR1 = [

        ("d1", [0.00, 1.00, 3.00, 2.00], [1.00, 1.00, 1.00]),

        ("d2", [2.00, 0.00, 0.00, 2.00], [0.90, 0.70, 0.90]),

        ("d3", [1.00, 0.00, 2.00, 0.00], [1.00, 0.90, 1.00]),

        ("d4", [0.00, 0.00, 3.00, 1.00], [0.80, 0.90, 0.70]),

        ("d5", [1.00, 2.00, 0.00, 2.00], [1.00, 1.00, 1.00]),

        ("d6", [0.00, 0.00, 0.00, 2.00], [1.00, 0.80, 1.00]),

        ("d7", [0.00, 0.00, 0.00, 0.00], [0.00, 0.00, 0.00]),

        ("d8", [1.00, 1.00, 1.00, 0.00], [0.30, 1.00, 1.00]),

        ("d9", [0.00, 0.00, 0.00, 2.00], [0.90, 0.90, 0.90]),

        ("d10", [3.00, 3.00, 3.00, 1.00], [1.00, 1.00, 1.00])

    ]

SR2 = [

        ("d6", [0.00, 0.00, 0.00, 2.00], [1.00, 0.80, 1.00]),

        ("d7", [0.00, 0.00, 0.00, 0.00], [0.00, 0.00, 0.00]),

        ("d8", [1.00, 1.00, 1.00, 0.00], [0.30, 1.00, 1.00]),

        ("d9", [0.00, 0.00, 0.00, 2.00], [0.90, 0.90, 0.90]),

        ("d10", [3.00, 3.00, 3.00, 1.00], [1.00, 1.00, 1.00]),

        ("d1", [0.00, 1.00, 3.00, 2.00], [1.00, 1.00, 1.00]),

        ("d2", [2.00, 0.00, 0.00, 2.00], [0.90, 0.70, 0.90]),

        ("d3", [1.00, 0.00, 2.00, 0.00], [1.00, 0.90, 1.00]),

        ("d4", [0.00, 0.00, 3.00, 1.00], [0.80, 0.90, 0.70]),

        ("d5", [1.00, 2.00, 0.00, 2.00], [1.00, 1.00, 1.00])
    
    ]

SR3 = [

        ("d7", [0.00, 0.00, 0.00, 0.00], [0.00, 0.00, 0.00]),

        ("d6", [0.00, 0.00, 0.00, 2.00], [1.00, 0.80, 1.00]),

        ("d9", [0.00, 0.00, 0.00, 2.00], [0.90, 0.90, 0.90]),

        ("d8", [1.00, 1.00, 1.00, 0.00], [0.30, 1.00, 1.00]),

        ("d3", [1.00, 0.00, 2.00, 0.00], [1.00, 0.90, 1.00]),

        ("d2", [2.00, 0.00, 0.00, 2.00], [0.90, 0.70, 0.90]),

        ("d4", [0.00, 0.00, 3.00, 1.00], [0.80, 0.90, 0.70]),

        ("d5", [1.00, 2.00, 0.00, 2.00], [1.00, 1.00, 1.00]),

        ("d1", [0.00, 1.00, 3.00, 2.00], [1.00, 1.00, 1.00]),

        ("d10", [3.00, 3.00, 3.00, 1.00], [1.00, 1.00, 1.00])

]

SR4 = [

        ("d10", [3.00, 3.00, 3.00, 1.00], [1.00, 1.00, 1.00]),

        ("d1", [0.00, 1.00, 3.00, 2.00], [1.00, 1.00, 1.00]),

        ("d5", [1.00, 2.00, 0.00, 2.00], [1.00, 1.00, 1.00]),

        ("d2", [2.00, 0.00, 0.00, 2.00], [0.90, 0.70, 0.90]),

        ("d4", [0.00, 0.00, 3.00, 1.00], [0.80, 0.90, 0.70]),

        ("d8", [1.00, 1.00, 1.00, 0.00], [0.30, 1.00, 1.00]),

        ("d3", [1.00, 0.00, 2.00, 0.00], [1.00, 0.90, 1.00]),

        ("d6", [0.00, 0.00, 0.00, 2.00], [1.00, 0.80, 1.00]),

        ("d9", [0.00, 0.00, 0.00, 2.00], [0.90, 0.90, 0.90]),

        ("d7", [0.00, 0.00, 0.00, 0.00], [0.00, 0.00, 0.00])

    ]

SR = [SR1, SR2, SR3, SR4]

#Ideal Ranked List
IR = [

        ("d10", [3.00, 3.00, 3.00, 1.00], [1.00, 1.00, 1.00]),

        ("d1", [0.00, 1.00, 3.00, 2.00], [1.00, 1.00, 1.00]),

        ("d5", [1.00, 2.00, 0.00, 2.00], [1.00, 1.00, 1.00]),

        ("d3", [1.00, 0.00, 2.00, 0.00], [1.00, 0.90, 1.00]),

        ("d2", [2.00, 0.00, 0.00, 2.00], [0.90, 0.70, 0.90]),

        ("d4", [0.00, 0.00, 3.00, 1.00], [0.80, 0.90, 0.70]),

        ("d6", [0.00, 0.00, 0.00, 2.00], [1.00, 0.80, 1.00]),

        ("d9", [0.00, 0.00, 0.00, 2.00], [0.90, 0.90, 0.90]),

        ("d8", [1.00, 1.00, 1.00, 0.00], [0.30, 1.00, 1.00]),

        ("d7", [0.00, 0.00, 0.00, 0.00], [0.00, 0.00, 0.00])

    ]



if __name__ == "__main__":

    parser = argparse.ArgumentParser(description='MDCU')
    parser.add_argument('--baseOverlap', '-b', nargs='+', default=[1.01, 2.00, 3.00, 5.00], help='Base Overlap Array', type=float)
    args = parser.parse_args()
    
    for sr in SR:
        
        #initialize the search results
        search_results: List[Document] = [Document(#doc_id = None,
                       doc_content = sr[i][0], 
                       theme_relevance = np.array(sr[i][1]), 
                       attribute_usability = np.array(sr[i][2]))
                         for i in range(len(sr))]
        #initialize the ideal ranked list
        ideal_results: List[Document] = [Document(#doc_id = None,
                       doc_content = IR[i][0], 
                       theme_relevance = np.array(IR[i][1]), 
                       attribute_usability = np.array(IR[i][2]))
                         for i in range(len(IR))]
    
        
        for b in args.baseOverlap:
        #initialize the MDCU object
            mdcu = MDCU(baseOverlap = b)
            print(mdcu)
           
            df = mdcu.run(search_results, ideal_results)
            print(df)